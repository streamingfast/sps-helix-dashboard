// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class CreateCampaign {
  static encode(message: CreateCampaign, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.id);

    writer.uint32(18);
    writer.string(message.marketId);

    writer.uint32(26);
    writer.string(message.subaccountSuffix);

    writer.uint32(42);
    writer.string(message.round);

    writer.uint32(32);
    writer.int64(message.rewards);
  }

  static decode(reader: Reader, length: i32): CreateCampaign {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new CreateCampaign();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.string();
          break;

        case 2:
          message.marketId = reader.string();
          break;

        case 3:
          message.subaccountSuffix = reader.string();
          break;

        case 5:
          message.round = reader.string();
          break;

        case 4:
          message.rewards = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  id: string;
  marketId: string;
  subaccountSuffix: string;
  round: string;
  rewards: i64;

  constructor(
    id: string = "",
    marketId: string = "",
    subaccountSuffix: string = "",
    round: string = "",
    rewards: i64 = 0
  ) {
    this.id = id;
    this.marketId = marketId;
    this.subaccountSuffix = subaccountSuffix;
    this.round = round;
    this.rewards = rewards;
  }
}
