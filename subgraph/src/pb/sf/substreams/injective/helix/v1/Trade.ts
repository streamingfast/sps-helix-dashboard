// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class Trade {
  static encode(message: Trade, writer: Writer): void {
    writer.uint32(8);
    writer.int64(message.quantity);

    writer.uint32(16);
    writer.int64(message.price);

    writer.uint32(34);
    writer.string(message.subaccountId);

    writer.uint32(24);
    writer.int64(message.volumeUsd);
  }

  static decode(reader: Reader, length: i32): Trade {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Trade();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.quantity = reader.int64();
          break;

        case 2:
          message.price = reader.int64();
          break;

        case 4:
          message.subaccountId = reader.string();
          break;

        case 3:
          message.volumeUsd = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  quantity: i64;
  price: i64;
  subaccountId: string;
  volumeUsd: i64;

  constructor(
    quantity: i64 = 0,
    price: i64 = 0,
    subaccountId: string = "",
    volumeUsd: i64 = 0
  ) {
    this.quantity = quantity;
    this.price = price;
    this.subaccountId = subaccountId;
    this.volumeUsd = volumeUsd;
  }
}
