// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class UpdateCampaign {
  static encode(message: UpdateCampaign, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.marketId);

    writer.uint32(21);
    writer.float(message.newRewards);

    writer.uint32(26);
    writer.string(message.round);
  }

  static decode(reader: Reader, length: i32): UpdateCampaign {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new UpdateCampaign();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.marketId = reader.string();
          break;

        case 2:
          message.newRewards = reader.float();
          break;

        case 3:
          message.round = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  marketId: string;
  newRewards: f32;
  round: string;

  constructor(
    marketId: string = "",
    newRewards: f32 = 0.0,
    round: string = ""
  ) {
    this.marketId = marketId;
    this.newRewards = newRewards;
    this.round = round;
  }
}
